version: '3.8'

networks:
  webproxy:
    name: webproxy
    driver: bridge
  microservice:
    name: microservice
    driver: bridge

services:
  reverse-proxy:
    build: ./reverse-proxy
    container_name: reverse-proxy
    restart: always
    networks:
      - webproxy
    ports:
      - "80:80"
    volumes:
      - ./reverse-proxy/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - api-gateway
      - pushgateway

  rabbitmq:
    image: rabbitmq:4-management
    container_name: rabbitmq
    networks:
      - microservice
    restart: always
    ports:
      - "5671:5672"
      - "15672:15672"

  rabbitmq-exporter:
    image: kbudde/rabbitmq-exporter
    container_name: rabbitmq-exporter
    ports:
      - "15692:15692"
    networks:
      - microservice
    restart: always
    environment:
      - RABBIT_URL=http://guest:guest@rabbitmq:15672
      - OUTPUT_FORMAT=prometheus
      - PUBLISH_PORT=15692
    depends_on:
      - rabbitmq



  note-db:
    image: postgres:13
    container_name: note-db
    restart: always
    networks:
      - microservice
    environment:
      POSTGRES_DB: note_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - note-data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"


  prometheus:
    image: prom/prometheus
    container_name: prometheus
    networks:
      - webproxy
      - microservice  # เพิ่ม microservice network
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.external-url=http://localhost/prometheus'
    ports:
    - "9090:9090" 


  pushgateway:
    image: prom/pushgateway
    container_name: pushgateway
    networks:
      - webproxy
      - microservice  # เพิ่ม microservice network
    ports:
      - "9091:9091"

  # grafana:
  #   image: grafana/grafana
  #   container_name: grafana
  #   networks:
  #     - microservice
  #     - webproxy    # ✅ เพิ่มตรงนี้/
  #   ports:
  #      - "3000:3000"
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=admin
  #   volumes:
  #      - grafana_data:/var/lib/grafana

  grafana:
    image: grafana/grafana
    container_name: grafana
    networks:
     - microservice
     - webproxy 
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_ROOT_URL=%(protocol)s://%(domain)s/grafana/
    volumes:
      - grafana_data:/var/lib/grafana

  social-service:
    build: ./social-service
    container_name: social-service
    restart: always
    networks:
      - microservice
    depends_on:
      - note-db
      - rabbitmq
    ports:
      - "5001:5001"

  note-service:
    build: ./note-service
    container_name: note-service
    restart: always
    networks:
      - microservice
    depends_on:
      - note-db
      - rabbitmq
    ports:
      - "5002:5002"

  auth-service:
    build: ./auth-service
    container_name: auth-service
    restart: always
    networks:
      - microservice
    depends_on:
      - note-db
      - rabbitmq
    ports:
      - "5003:5003"

  notification-service:
    build: ./notification-service
    container_name: notification-service
    restart: always
    networks:
      - microservice
    depends_on:
      - note-db
      - rabbitmq
    ports:
      - "5004:5004"


  frontend:
    build: ./frontend 
    container_name: react_frontend
    restart: always
    depends_on:
      - note-db
    networks:
      - webproxy
    ports:
      - "5173:5173" 
    volumes:
      - ./frontend:/app
      - /app/node_modules

  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    restart: always
    networks:
      - webproxy
      - microservice
    ports:
      - "8080:80"
    volumes:
      - ./api-gateway/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - note-service
      - social-service
      - auth-service
      - notification-service
      - rabbitmq

volumes:
  note-data:
  rabbitmq_data:
  grafana_data:
